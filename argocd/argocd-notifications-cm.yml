apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  context: |
    argocdUrl: https://argocd.simulatan.me

  # default subscriptions
  subscriptions: |
    - recipients:
      - discord-webhook
      # only apply to k8s-ops projects, others have different services
      selector: argocd.argoproj.io/instance=k8s-ops
      triggers:
      - sync-operation-change

  service.github: |
    appID: "652832"
    installationID: "44413271"
    privateKey: $github-privateKey
  service.github.contestsubmission: |
    appID: "652832"
    installationID: "47219356"
    privateKey: $github-privateKey
  service.webhook.discord-webhook: |
    url: https://discord.com/api/webhooks/$discord-webhook-id/$discord-webhook-token
    headers:
    - name: Content-Type
      value: application/json

  trigger.sync-operation-change: |
    - when: app.status.operationState.phase in ['Succeeded']
      oncePer: app.status.operationState.syncResult.revision
      send: [discord-webhook, github-app-deployed]
    - when: app.status.operationState.phase in ['Running']
      oncePer: app.status.operationState.syncResult.revision
      send: [discord-webhook]
    - when: app.status.operationState.phase in ['Error', 'Failed']
      oncePer: app.status.operationState.syncResult.revision
      send: [discord-webhook]

  template.discord-webhook: |
    webhook:
      discord-webhook:
        method: POST
        body: |
          {
            "avatar_url": "https://argocd.simulatan.me/assets/images/logo.png",
            "embeds": [{
              "title": "{{.app.metadata.name}}",
              "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": 1621586,
              "fields": [{
                "name": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "inline": false
              }, {
                "name": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "inline": false
              },
              {
                "name": "Commit SHA",
                "value": "[{{.app.status.sync.revision | trunc 7}}]({{.app.spec.source.repoURL}}/commit/{{.app.status.sync.revision}})",
                "inline": true
              },
              {
                "name": "Commit Author",
                "value": "{{(call .repo.GetCommitMetadata .app.status.sync.revision).Author}}",
                "inline": true
              },
              {
                "name": "Commit Date",
                "value": "{{(call .repo.GetCommitMetadata .app.status.sync.revision).Date}}",
                "inline": true
              },
              {
                "name": "Commit Message",
                "value": "{{(call .repo.GetCommitMetadata .app.status.sync.revision).Message}}",
                "inline": true
              }]
            }]
          }
  template.github-app-deployed: |
    message: |
      Application {{.app.metadata.name}} was updated.
    github:
      repoURLPath: "{{.app.spec.source.repoURL}}"
      revisionPath: "{{.app.status.operationState.syncResult.revision}}"
      status:
        state: success
        label: "continuous-delivery/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
      deployment:
        state: success
        environment: production
        environmentURL: "https://{{.app.metadata.name}}.simulatan.me"
        logURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
        requiredContexts: []
        autoMerge: true
      pullRequestComment:
        content: |
          Application {{.app.metadata.name}} is now running new version of deployments manifests.
          See more here: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true


